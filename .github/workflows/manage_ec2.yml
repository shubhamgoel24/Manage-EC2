name: Manage EC2 Instance

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose an action'
        required: true
        default: 'start'
        type: choice
        options:
          - start
          - stop

jobs:
  manage-ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.EC2_REGION }}

      - name: Start EC2 Instance
        if: ${{ github.event.inputs.action == 'start' }}
        run: |
          RESPONSE=$(aws ec2 start-instances --instance-ids ${{ vars.EC2_ID }} --output json)
          echo "$RESPONSE" | jq 'walk(if type == "object" and has("InstanceId") then .InstanceId = "****HIDDEN****" else . end)'
          echo "$RESPONSE" > response.json

      - name: Stop EC2 Instance
        if: ${{ github.event.inputs.action == 'stop' }}
        run: |
          RESPONSE=$(aws ec2 stop-instances --instance-ids ${{ vars.EC2_ID }} --output json)
          echo "$RESPONSE" | jq 'walk(if type == "object" and has("InstanceId") then .InstanceId = "****HIDDEN****" else . end)'
          echo "$RESPONSE" > response.json

      - name: Send Notification to Discord
        run: |
          STATUS="STOP"
          if [ "${{ github.event.inputs.action }}" == "start" ]; then
            STATUS="START"
          fi
          
          # Get the GitHub actor (who triggered the workflow)
          ACTOR="${{ github.actor }}"
          
          # Read and format the response
          RESPONSE=$(cat response.json | jq -c . | sed 's/"/\\"/g')

          # Send notification to Discord
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"ðŸ‘¤ **Triggered by:** ${ACTOR}\nðŸ–¥ **EC2 Instance:** ${{ vars.EC2_ID }}\nðŸš€ **Action:** $STATUS\nðŸ“œ **Response:** \n\`\`\`json\n$RESPONSE\n\`\`\`\"}" \
               ${{ vars.DISCORD_WEBHOOK_URL }}
